{"version":3,"sources":["service/GradingScaleService.js","service/TakenCoursesService.js","component/AddCourseDialog.js","component/TermSummary.js","component/GradingScaleDialog.js","component/Summary.js","component/CourseCard.js","service/CurriculumService.js","component/EditCurriculumDialog.js","component/Curriculum.js","Home.js","component/PieChart.js","App.js","index.js"],"names":["defaultScale","saveGradingScale","scale","localStorage","setItem","JSON","stringify","getGradingScale","getItem","parse","gradeToScore","grade","scales","GradingScaleService","i","length","score","getColor","min","Math","apply","map","o","max","percentage","color","a","b","amount","ar","ag","ab","lerpHex","parseInt","toString","saveTakenCourses","takenCourses","getTakenCourses","taken_courses","TakenCoursesService","course","newTakenCourses","forEach","t","idx","filter","c","term","termIdx","push","useStyles","makeStyles","theme","root","dialogRow","marginBottom","spacing","dialogGradeField","marginRight","dialogScoreField","formControl","width","AddCourseDialog","open","handleAddCourse","handleClose","initialCode","initialName","initialCredit","classes","useState","setGrade","credit","setCretit","code","setCode","name","setName","valid","setValid","termSize","setTermSize","React","useEffect","s","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","variant","autoFocus","error","required","margin","value","label","onChange","e","flag","target","fullWidth","type","step","inputProps","FormControl","className","InputLabel","Select","labelId","MenuItem","row","DialogActions","Button","onClick","Tooltip","title","disabled","addCourse","bullet","display","transform","fontSize","pos","TermSummary","handleRemoveTerm","setOpen","totalCredit","termGpa","currCredit","Card","CardContent","Typography","component","toPrecision","CardActions","size","GradingScaleDialog","setScale","entry","k","v","Box","event","oldKey","newKey","console","log","handleGradeNameChange","inputMode","key","handleScoreChange","Summary","terms","handleAddTerm","gradingScaleDialogOpen","setGradingScaleDialogOpen","j","padding","card","border","avatar","backgroundColor","creditTypography","marginLeft","palette","primary","main","CourseCard","courseIdx","handleDelete","CardHeader","Avatar","action","IconButton","DeleteOutlined","subheader","flex","defaultCurriculum","saveCurriculum","curriculum","CurriculumService","removeItem","dialogCourseCodeField","dialogCourseNameField","dialogCourseCreditField","termBox","marginTop","termText","paddingBottom","EditCurriculumDialog","setCurriculum","copyCurriculum","maxWidth","disableBackdropClick","tidx","cidx","handleCourseCodeChange","handleCourseNameChange","handleCourseCreditChange","splice","handleDeleteCourse","background","paper","position","overflow","listSection","ul","Curriculum","editCurriculumDialogOpen","setEditCurriculumDialogOpen","setTerms","isTaken","openAddCourse","setOpenAddCourse","selectedCourse","setSelectedCourse","selectedTerm","setSelectedTerm","selectedTermIdx","setSelectedTermIdx","List","ListSubheader","ListItem","button","dense","ListItemText","grey","height","curriculumGrid","summaryContainer","pieChart","alignContent","alignItems","verticalAlign","minHeight","minWidth","Home","newTerms","Grid","container","item","xs","md","data","country","area","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSACMA,EAAe,CACjB,CAAE,MAAS,KAAM,MAAS,GAC1B,CAAE,MAAS,KAAM,MAAS,MAC1B,CAAE,MAAS,KAAM,MAAS,KAC1B,CAAE,MAAS,KAAM,MAAS,MAC1B,CAAE,MAAS,KAAM,MAAS,GAC1B,CAAE,MAAS,KAAM,MAAS,MAC1B,CAAE,MAAS,KAAM,MAAS,KAC1B,CAAE,MAAS,KAAM,MAAS,MAC1B,CAAE,MAAS,KAAM,MAAS,GAC1B,CAAE,MAAS,IAAK,MAAS,MACzB,CAAE,MAAS,KAAM,MAAS,GAC1B,CAAE,MAAS,KAAM,MAAS,GAC1B,CAAE,MAAS,KAAM,MAAS,IAGxBC,EAAmB,SAACC,GACtBC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUJ,KAGnDK,EAAkB,WACpB,IAAML,EAAQC,aAAaK,QAAQ,iBACnC,OAAc,OAAVN,GAA4B,KAAVA,GAClBD,EAAiBD,GACVA,GAEJK,KAAKI,MAAMP,IAGhBQ,EAAe,SAACC,GAElB,IADA,IAAIC,EAASC,EAAoBN,kBACxBO,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAC/B,GAAIF,EAAOE,GAAGH,QAAUA,EACpB,OAAOC,EAAOE,GAAGE,MAGzB,OAAO,GAkCEH,EAAsB,CAAEZ,mBAAkBM,kBAAiBG,eAAcO,SA/BrE,SAACN,GACd,IAgBMT,EAAQK,IACRW,EAAMC,KAAKD,IAAIE,MAAMD,KAAMjB,EAAMmB,KAAI,SAAUC,GAAK,OAAOA,EAAEN,UAC7DO,EAAMJ,KAAKI,IAAIH,MAAMD,KAAMjB,EAAMmB,KAAI,SAAUC,GAAK,OAAOA,EAAEN,UAI7DQ,EAAaN,EADLR,EAAaC,IACOY,EAAML,GAElCO,EAxBU,SAACC,EAAGC,EAAGC,GACnB,IAAMC,EAAKH,GAAK,GACVI,EAAMJ,GAAK,EAAK,IAChBK,EAAS,IAAJL,EAUX,OAJWG,EAAKD,IAJLD,GAAK,IAIeE,IAIjB,KAHHC,EAAKF,IAJJD,GAAK,EAAK,KAISG,IAGJ,IAAW,EAF3BC,EAAKH,IAJD,IAAJD,GAIoBI,IAarBC,CAAQC,SAAS,SAAU,IAAKA,SAAS,SAAU,IAAKT,GAAYU,SAAS,IAE3F,MAAM,IAAN,OAAWT,K,0FCjETU,EAAmB,SAACC,GACtBjC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAU8B,KAGnDC,EAAkB,WACpB,IAAMC,EAAgBnC,aAAaK,QAAQ,iBAC3C,OAAsB,OAAlB8B,GAA4C,KAAlBA,EACnB,CACH,CACI,CAAE,KAAQ,cAAU,KAAQ,aAAc,MAAS,KAAM,OAAU,GACnE,CAAE,KAAQ,cAAU,KAAQ,oBAAqB,MAAS,KAAM,OAAU,IAE9E,CACI,CAAE,KAAQ,SAAU,KAAQ,iBAAkB,MAAS,KAAM,OAAU,GACvE,CAAE,KAAQ,cAAU,KAAQ,aAAc,MAAS,KAAM,OAAU,GACnE,CAAE,KAAQ,cAAU,KAAQ,uBAAwB,MAAS,IAAK,OAAU,KAKjFjC,KAAKI,MAAM6B,IA0BTC,EAAwBJ,EAAxBI,EAA0CF,EAA1CE,EAvBQ,SAACC,GAClB,IAAMF,EAAgBD,IAClBI,EAAe,YAAOH,GAC1BG,EAAgBC,SAAQ,SAACC,EAAGC,GACxBH,EAAgBG,GAAOH,EAAgBG,GAAKC,QAAO,SAAAC,GAAC,OAAIA,IAAMN,QAElEL,EAAiBM,IAiBRF,EAdK,SAACQ,EAAMC,EAASR,GAC9B,IAAMF,EAAgBD,IAClBI,EAAe,YAAOH,GAC1BG,EAAgBO,GAASC,KAAKT,GAC9BL,EAAiBM,I,gBCpBfS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,GAGNC,UAAW,CACPC,aAAcH,EAAMI,QAAQ,IAEhCC,iBAAkB,CACdC,YAAaN,EAAMI,QAAQ,IAE/BG,iBAAkB,GAElBC,YAAa,CACTC,MAAO,YAKA,SAASC,EAAT,GAAyH,IAA9Ff,EAA6F,EAA7FA,KAAMC,EAAuF,EAAvFA,QAASe,EAA8E,EAA9EA,KAAMC,EAAwE,EAAxEA,gBAAiBC,EAAuD,EAAvDA,YAAaC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,cAC7GC,EAAUnB,IACZtC,EAASC,EAAoBN,kBAEjC,EAA0B+D,mBAAS,IAAnC,mBAAO3D,EAAP,KAAc4D,EAAd,KACA,EAA4BD,mBAASF,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAAwBH,mBAASJ,GAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KACA,EAAwBL,mBAASH,GAAjC,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAA0BP,oBAAS,GAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KAGA,EAAgCT,mBAAS/B,IAAsCxB,QAA/E,mBAAOiE,EAAP,KAAiBC,EAAjB,KAEAC,IAAMC,WAAU,WACZ,IAAIC,EAAI7C,IAAsCxB,OAC9CkE,EAAYG,KACb,CAACrB,IAELmB,IAAMC,WAAU,WAEfR,EAAQT,GACRW,EAAQV,GACRM,EAAUL,KACR,CAACF,EAAaE,EAAeD,IAe/B,OACI,eAACkB,EAAA,EAAD,CAAQtB,KAAMA,EAAMuB,QAASrB,EAAasB,kBAAgB,oBAA1D,UACI,cAACC,EAAA,EAAD,CAAaC,GAAG,oBAAhB,wBACA,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,0CACiC3C,EAAU,EAD3C,qCAIA,cAAC4C,EAAA,EAAD,CACIC,QAAQ,WACRC,WAAS,EACTC,OAASjB,EACTkB,UAAQ,EACRC,OAAO,QACPR,GAAG,OACHS,MAAOxB,EACPyB,MAAM,cACNC,SAAU,SAACC,GACX,IAAIC,GAAO,EACXvD,EAAKL,SAAQ,SAACC,EAAGC,GACTD,EAAE+B,OAAS2B,EAAEE,OAAOL,QACxBI,GAAO,MAGXvB,EAASuB,GACT3B,EAAQ0B,EAAEE,OAAOL,QAEjBM,WAAS,IAEb,cAACZ,EAAA,EAAD,CACIE,WAAS,EACTD,QAAQ,WACRI,OAAO,QACPD,UAAQ,EACRP,GAAG,OACHS,MAAOtB,EACPuB,MAAM,cACNC,SAAU,SAACC,GAAOxB,EAAQwB,EAAEE,OAAOL,QACnCM,WAAS,IAEb,cAACZ,EAAA,EAAD,CACIE,WAAS,EACTE,UAAQ,EACRH,QAAQ,WACRI,OAAO,QACPR,GAAG,OACHU,MAAM,gBACND,MAAO1B,EACPiC,KAAK,SACLC,KAAQ,GACRN,SAAU,SAACC,GAAO5B,EAAU4B,EAAEE,OAAOL,QACrCS,WAhFG,CAACD,KAAM,IAiFVF,WAAS,IAEb,eAACI,EAAA,EAAD,CAAaf,QAAQ,WAAWgB,UAAWxC,EAAQT,YAAnD,UACI,cAACkD,EAAA,EAAD,CAAYrB,GAAG,kCAAf,0BACA,eAACsB,EAAA,EAAD,CACIC,QAAQ,kCACRvB,GAAG,4BACHS,MAAOvF,EACPwF,MAAQ,eACRC,SAAU,SAACC,GAAO9B,EAAS8B,EAAEE,OAAOL,QALxC,UAOI,cAACe,EAAA,EAAD,CAAUf,MAAM,GAAhB,SAAmB,wCAElBtF,EAAOS,KAAI,SAAC6F,GAAD,OACZ,cAACD,EAAA,EAAD,CAAUf,MAAOgB,EAAIvG,MAArB,SAA6BuG,EAAIvG,oBAM7C,eAACwG,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAQC,QAASpD,EAAaxC,MAAM,UAApC,oBAIA,cAAC6F,EAAA,EAAD,CAASC,MAAOvC,GAAYhC,EAAU,iBAAmBgC,EAAU,kBAAoBhC,EAAUgC,EAAW,GAAK,cAAgB,KAAjI,SACI,+BACA,cAACoC,EAAA,EAAD,CAAQI,SAAUxC,GAAYhC,EAC9BqE,QACI,YA9FE,SAACtE,EAAMC,EAASR,GAC1BsC,IACFd,EAAgBjB,EAAKC,EAAQR,GAC7ByB,IACAM,EAAS,IACTI,EAAQ,IACRE,EAAQ,IACRJ,EAAU,KAwFAgD,CAAU1E,EAAMC,EAAS,CACrB,KAAQ0B,EACR,KAAQE,EACR,MAASjE,EACT,OAAU6D,KAEX/C,MAAM,UATb,2BC/IhB,IAAMyB,EAAYC,YAAW,CAE3BuE,OAAQ,CACNC,QAAS,eACT1B,OAAQ,QACR2B,UAAW,cAEbL,MAAO,CACLM,SAAU,IAEZC,IAAK,CACHvE,aAAc,IAEhBK,YAAa,CACXC,MAAO,UAII,SAASkE,EAAT,GAcb,IAduF,IAApDhF,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASgB,EAAoC,EAApCA,gBAAiBgE,EAAmB,EAAnBA,iBAC7D3D,EAAUnB,IAChB,EAAwBgC,IAAMZ,UAAS,GAAvC,mBAAOP,EAAP,KAAakE,EAAb,KAUIC,EAAc,EACdC,EAAU,EACLrH,EAAI,EAAGA,EAAIiC,EAAKhC,OAAQD,IAAK,CACpC,IAAIsH,EAAanG,SAASc,EAAKjC,GAAG0D,QAClC0D,GAAeE,EACfD,GAAWC,EAAavH,EAAoBH,aAAaqC,EAAKjC,GAAGH,OAGnE,OACE,eAAC0H,EAAA,EAAD,CAAOxC,QAAS,WAAYgB,UAAWxC,EAAQhB,KAA/C,UACE,eAACiF,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAY1B,UAAWxC,EAAQkD,MAAO9F,MAAM,gBAA5C,oBACUuB,EAAU,EADpB,UAGA,cAACuF,EAAA,EAAD,CAAY1C,QAAQ,KAAK2C,UAAU,KAAnC,UACIL,EAAUD,GAAaO,YAAY,KAEvC,cAACF,EAAA,EAAD,CAAY1B,UAAWxC,EAAQyD,IAAKrG,MAAM,gBAA1C,SACG,iBAAkByG,OAIvB,eAACQ,EAAA,EAAD,WACU,cAACtB,EAAA,EAAD,CAAQvB,QAAQ,YAAa8C,KAAK,QAAQlH,MAAM,UAAU4F,QA/BhD,WACtBY,GAAQ,IA8BI,wBACA,cAACb,EAAA,EAAD,CAAQvB,QAAQ,WAAY8C,KAAK,QAAQtB,QAAS,kBAAMW,EAAiBjF,IAAzE,4BAGV,cAACe,EAAD,CAAiBI,YAAa,GAAIC,YAAa,GAAIC,cAAe,EAAGrB,KAAMA,EAAMC,QAASA,EAASe,KAAMA,EAAME,YA/B/F,WAClBgE,GAAQ,IA8BmIjE,gBAAiBA,O,aCvD1Jd,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,GAGNC,UAAW,CACPC,aAAcH,EAAMI,QAAQ,IAEhCC,iBAAkB,CACdC,YAAaN,EAAMI,QAAQ,IAE/BG,iBAAkB,OAKP,SAASiF,EAAT,GAAoD,IAAtB7E,EAAqB,EAArBA,KAAME,EAAe,EAAfA,YACzCI,EAAUnB,IAEhB,EAA0BoB,mBAASzD,EAAoBN,mBAAvD,mBAAOL,EAAP,KAAc2I,EAAd,KAwBA,OACI,eAACxD,EAAA,EAAD,CAAQtB,KAAMA,EAAMuB,QAASrB,EAA7B,UACI,cAACuB,EAAA,EAAD,gCACA,eAACE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,4CAGCzF,EAAMmB,KAAI,SAACyH,EAAOlG,GACf,IAAMmG,EAAID,EAAMnI,MACVqI,EAAIF,EAAM9H,MAChB,OACI,eAACiI,EAAA,EAAD,CAAepC,UAAWxC,EAAQf,UAAlC,UACI,cAACsC,EAAA,EAAD,CAAWiB,UAAWxC,EAAQZ,iBAC1BoC,QAAQ,WACRM,MAAO,QACPC,SAAU,SAAC8C,GAAD,OArCR,SAACC,EAAQD,GACnC,IAAME,EAASF,EAAM3C,OAAOL,MAC5B,IAAK,IAAMpF,KAAKZ,EACZ,GAAIA,EAAMY,GAAGH,QAAUwI,EAAQ,CAC3BjJ,EAAMY,GAAGH,MAAQyI,EACjBC,QAAQC,IAAI,iBAAkBH,EAAQC,GACtC,MAGRP,EAASxI,KAAKI,MAAMJ,KAAKC,UAAUJ,KA4BUqJ,CAAsBR,EAAGG,IAC9ChD,MAAO6C,EAEPJ,KAAK,QACLa,UAAU,QAPd,UAKY5G,EALZ,MAQA,cAACgD,EAAA,EAAD,CAAWiB,UAAWxC,EAAQV,iBAC1BkC,QAAQ,WACRM,MAAO,QAEPD,MAAO8C,EACP5C,SAAU,SAAC8C,GAAD,OAnCZ,SAACO,EAAKP,GAC5B,IAAK,IAAMpI,KAAKZ,EACZ,GAAIA,EAAMY,GAAGH,QAAU8I,EAAK,CACxBvJ,EAAMY,GAAGE,MAAQkI,EAAM3C,OAAOL,MAC9B,MAGR2C,EAASxI,KAAKI,MAAMJ,KAAKC,UAAUJ,KA4BUwJ,CAAkBX,EAAGG,IAC1CM,UAAU,SACVb,KAAK,SAPT,UAGY/F,EAHZ,QATMA,SAuBtB,eAACuE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQC,QAAS,WACbwB,EAAShI,EAAoBN,mBAC7B0D,KACDxC,MAAM,UAHT,oBAMA,cAAC2F,EAAA,EAAD,CAAQ3F,MAAM,UAAU4F,QAAS,WAC7BwB,EAAS,GAAD,mBAAK3I,GAAL,CAAY,CAAE,MAAS,GAAI,MAAS,OADhD,uBAKA,cAACkH,EAAA,EAAD,CAAQC,QAAS,WACbxG,EAAoBZ,iBAAiBC,GACrC+D,KACDxC,MAAM,UAHT,wBCxFhB,IAAMyB,EAAYC,aAAW,SAACC,GAAD,MAAY,CAEvCmE,MAAO,CACLM,SAAU,IAEZC,IAAK,CACHvE,aAAc,IAEhBK,YAAa,CACXC,MAAO,QAETR,KAAM,OAIO,SAASsG,EAAT,GASb,IATyD,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,cACjCxF,EAAUnB,IAIhB,EAA4DoB,oBAAS,GAArE,mBAAOwF,EAAP,KAA+BC,EAA/B,KAEI7B,EAAc,EACdC,EAAU,EACL6B,EAAI,EAAGA,EAAIJ,EAAM7I,OAAQiJ,IAEhC,IADA,IAAIjH,EAAO6G,EAAMI,GACRlJ,EAAI,EAAGA,EAAIiC,EAAKhC,OAAQD,IAAK,CACpC,IAAIsH,EAAanG,SAASc,EAAKjC,GAAG0D,QAClC0D,GAAeE,EACfD,GAAWC,EAAavH,EAAoBH,aAAaqC,EAAKjC,GAAGH,OAarE,OACE,eAACsI,EAAA,EAAD,WAEE,eAACZ,EAAA,EAAD,CAAMxC,QAAS,WAAYgB,UAAWxC,EAAQhB,KAA9C,UACE,eAACiF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAY1B,UAAWxC,EAAQkD,MAAO9F,MAAM,gBAA5C,4BAGA,cAAC8G,EAAA,EAAD,CAAY1C,QAAQ,KAApB,UACIsC,EAAUD,GAAaO,YAAY,KAEvC,cAACF,EAAA,EAAD,CAAY1B,UAAWxC,EAAQyD,IAAKrG,MAAM,gBAA1C,SACG,iBAAmByG,OAKxB,eAACQ,EAAA,EAAD,WACE,cAACtB,EAAA,EAAD,CAAQvB,QAAQ,YAAY8C,KAAK,QAAQlH,MAAM,UAAU4F,QAASwC,EAAlE,sBACA,cAACzC,EAAA,EAAD,CAAQvB,QAAQ,WAAW8C,KAAK,QAAQtB,QA3BX,WACnC0C,GAA0B,IA0BpB,qCAIJ,cAACnB,EAAD,CAAoB7E,KAAM+F,EAAwB7F,YA3BhB,WACpC8F,GAA0B,S,wCC1CxB7G,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF4G,QAAS,KAEbC,KAAM,CACFC,OAAQ,SAAC3H,GACL,MAAM,aAAN,OAAoB3B,EAAoBI,SAASuB,EAAO7B,UAGhEyJ,OAAQ,CACJC,gBAAiB,SAAC7H,GACd,OAAO3B,EAAoBI,SAASuB,EAAO7B,SAGnD+G,OAAQ,CACJC,QAAS,eACT1B,OAAQ,QACR2B,UAAW,cAEfL,MAAO,CACHM,SAAU,IAEdC,IAAK,CACDvE,aAAc,IAElB+G,iBAAkB,CACdC,WAAYnH,EAAMI,QAAQ,GAC1B/B,MAAO2B,EAAMoH,QAAQC,QAAQC,UAKtB,SAASC,EAAT,GAAmE,IAA7C3H,EAA4C,EAA5CA,QAAS4H,EAAmC,EAAnCA,UAAWpI,EAAwB,EAAxBA,OAAQqI,EAAgB,EAAhBA,aACvDxG,EAAUnB,EAAUV,GAC1B,OACI,8BACI,cAAC6F,EAAA,EAAD,CAAMxC,QAAS,WAAYgB,UAAWxC,EAAQ6F,KAA9C,SACI,cAACY,EAAA,EAAD,CACIV,OACI,cAACW,EAAA,EAAD,CAAQlE,UAAWxC,EAAQ+F,OAA3B,SACK5H,EAAO7B,QAGhBqK,OACI,cAACC,EAAA,EAAD,CAAY5D,QAAS,kBAAMwD,EAAa7H,EAAS4H,EAAWpI,IAA5D,SACI,cAAC0I,EAAA,EAAD,MAGR3D,MAAO/E,EAAOkC,KACdyG,UACI,eAAClC,EAAA,EAAD,CAAKmC,KAAK,SAAV,UACI,cAAC7C,EAAA,EAAD,CAAY1C,QAAQ,UAApB,SAA+BrD,EAAOoC,OACtC,cAAC2D,EAAA,EAAD,CAAY1B,UAAWxC,EAAQiG,iBAAkBzE,QAAQ,UAAzD,SAAoErD,EAAOgC,kB,yEC5DjG6G,GAAoB,CACtB,CACI,CAAE,KAAQ,SAAU,KAAQ,gCAAiC,MAAS,KAAM,OAAU,GACtF,CAAE,KAAQ,SAAU,KAAQ,2CAA4C,MAAS,KAAM,OAAU,GACjG,CAAE,KAAQ,SAAU,KAAQ,gBAAiB,MAAS,KAAM,OAAU,GACtE,CAAE,KAAQ,cAAU,KAAQ,aAAc,MAAS,KAAM,OAAU,GACnE,CAAE,KAAQ,SAAU,KAAQ,uCAAwC,MAAS,KAAM,OAAU,GAC7F,CAAE,KAAQ,cAAU,KAAQ,oBAAqB,MAAS,KAAM,OAAU,GAC1E,CAAE,KAAQ,SAAU,KAAQ,YAAa,MAAS,KAAM,OAAU,GAClE,CAAE,KAAQ,SAAU,KAAQ,mDAAoD,MAAS,KAAM,OAAU,IAE7G,CACI,CAAE,KAAQ,SAAU,KAAQ,iCAAkC,MAAS,KAAM,OAAU,GACvF,CAAE,KAAQ,SAAU,KAAQ,4CAA6C,MAAS,KAAM,OAAU,GAClG,CAAE,KAAQ,SAAU,KAAQ,iBAAkB,MAAS,KAAM,OAAU,GACvE,CAAE,KAAQ,cAAU,KAAQ,aAAc,MAAS,KAAM,OAAU,GACnE,CAAE,KAAQ,cAAU,KAAQ,uBAAwB,MAAS,KAAM,OAAU,GAC7E,CAAE,KAAQ,cAAU,KAAQ,qBAAsB,MAAS,KAAM,OAAU,GAC3E,CAAE,KAAQ,SAAU,KAAQ,aAAc,MAAS,KAAM,OAAU,IAEvE,CACI,CAAE,KAAQ,SAAU,KAAQ,kBAAmB,MAAS,KAAM,OAAU,GACxE,CAAE,KAAQ,SAAU,KAAQ,wBAAyB,MAAS,KAAM,OAAU,GAC9E,CAAE,KAAQ,SAAU,KAAQ,sBAAuB,MAAS,KAAM,OAAU,GAC5E,CAAE,KAAQ,SAAU,KAAQ,eAAgB,MAAS,KAAM,OAAU,GACrE,CAAE,KAAQ,SAAU,KAAQ,mBAAoB,MAAS,KAAM,OAAU,GACzE,CAAE,KAAQ,cAAU,KAAQ,cAAe,MAAS,KAAM,OAAU,GACpE,CAAE,KAAQ,cAAU,KAAQ,sDAAoD,MAAS,KAAM,OAAU,GACzG,CAAE,KAAQ,YAAU,KAAQ,mCAAoC,MAAS,KAAM,OAAU,GACzF,CAAE,KAAQ,QAAS,KAAQ,wBAAyB,MAAS,KAAM,OAAU,IAEjF,CACI,CAAE,KAAQ,SAAU,KAAQ,aAAc,MAAS,KAAM,OAAU,GACnE,CAAE,KAAQ,SAAU,KAAQ,yBAA0B,MAAS,KAAM,OAAU,GAC/E,CAAE,KAAQ,SAAU,KAAQ,wBAAyB,MAAS,KAAM,OAAU,GAC9E,CAAE,KAAQ,SAAU,KAAQ,iCAAkC,MAAS,KAAM,OAAU,GACvF,CAAE,KAAQ,SAAU,KAAQ,6CAA8C,MAAS,KAAM,OAAU,GACnG,CAAE,KAAQ,cAAU,KAAQ,aAAc,MAAS,KAAM,OAAU,GACnE,CAAE,KAAQ,cAAU,KAAQ,uDAAqD,MAAS,KAAM,OAAU,GAC1G,CAAE,KAAQ,YAAU,KAAQ,oCAAqC,MAAS,KAAM,OAAU,GAC1F,CAAE,KAAQ,QAAS,KAAQ,wBAAyB,MAAS,KAAM,OAAU,IAEjF,CACI,CAAE,KAAQ,SAAU,KAAQ,wBAAyB,MAAS,KAAM,OAAU,GAC9E,CAAE,KAAQ,SAAU,KAAQ,eAAgB,MAAS,KAAM,OAAU,GACrE,CAAE,KAAQ,SAAU,KAAQ,sBAAuB,MAAS,KAAM,OAAU,GAC5E,CAAE,KAAQ,SAAU,KAAQ,kBAAmB,MAAS,KAAM,OAAU,GACxE,CAAE,KAAQ,MAAO,KAAQ,qBAAsB,MAAS,KAAM,OAAU,GACxE,CAAE,KAAQ,MAAO,KAAQ,0BAA2B,MAAS,KAAM,OAAU,GAC7E,CAAE,KAAQ,QAAS,KAAQ,wBAAyB,MAAS,KAAM,OAAU,IAEjF,CACI,CAAE,KAAQ,SAAU,KAAQ,oBAAqB,MAAS,KAAM,OAAU,GAC1E,CAAE,KAAQ,SAAU,KAAQ,uBAAwB,MAAS,KAAM,OAAU,GAC7E,CAAE,KAAQ,SAAU,KAAQ,4BAA6B,MAAS,KAAM,OAAU,GAClF,CAAE,KAAQ,MAAO,KAAQ,qBAAsB,MAAS,KAAM,OAAU,GACxE,CAAE,KAAQ,MAAO,KAAQ,qBAAsB,MAAS,KAAM,OAAU,GACxE,CAAE,KAAQ,QAAS,KAAQ,wBAAyB,MAAS,KAAM,OAAU,IAEjF,CACI,CAAE,KAAQ,SAAU,KAAQ,gBAAiB,MAAS,KAAM,OAAU,GACtE,CAAE,KAAQ,SAAU,KAAQ,wBAAyB,MAAS,KAAM,OAAU,GAC9E,CAAE,KAAQ,SAAU,KAAQ,mBAAoB,MAAS,KAAM,OAAU,GACzE,CAAE,KAAQ,MAAO,KAAQ,qBAAsB,MAAS,KAAM,OAAU,GACxE,CAAE,KAAQ,MAAO,KAAQ,qBAAsB,MAAS,KAAM,OAAU,GACxE,CAAE,KAAQ,MAAO,KAAQ,0BAA2B,MAAS,KAAM,OAAU,GAC7E,CAAE,KAAQ,QAAS,KAAQ,wBAAyB,MAAS,KAAM,OAAU,IAEjF,CACI,CAAE,KAAQ,SAAU,KAAQ,yBAA0B,MAAS,KAAM,OAAU,GAC/E,CAAE,KAAQ,SAAU,KAAQ,oBAAqB,MAAS,KAAM,OAAU,GAC1E,CAAE,KAAQ,MAAO,KAAQ,qBAAsB,MAAS,KAAM,OAAU,GACxE,CAAE,KAAQ,MAAO,KAAQ,qBAAsB,MAAS,KAAM,OAAU,GACxE,CAAE,KAAQ,MAAO,KAAQ,0BAA2B,MAAS,KAAM,OAAU,GAC7E,CAAE,KAAQ,MAAO,KAAQ,0BAA2B,MAAS,KAAM,OAAU,GAC7E,CAAE,KAAQ,QAAS,KAAQ,wBAAyB,MAAS,KAAM,OAAU,KAI/EC,GAAiB,SAACC,GACpBpL,aAAaC,QAAQ,aAAcC,KAAKC,UAAUiL,KAkBzCC,GAAsBF,GAAtBE,GAVS,WAClB,IAAMD,EAAapL,aAAaK,QAAQ,cACxC,OAAmB,OAAf+K,GAAsC,KAAfA,GACvBD,GAAeD,IACRA,IAEJhL,KAAKI,MAAM8K,IAITC,GAfW,WACpBrL,aAAasL,WAAW,cACxBH,GAAeD,KCxEbnI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,GAENC,UAAW,CACPC,aAAcH,EAAMI,QAAQ,IAEhCkI,sBAAuB,CACnBhI,YAAaN,EAAMI,QAAQ,IAE/BmI,sBAAuB,CACnBjI,YAAaN,EAAMI,QAAQ,IAE/BoI,wBAAyB,GAEzBC,QAAS,CACL1B,OAAQ,iBACR2B,UAAW1I,EAAMI,QAAQ,GACzByG,QAAS7G,EAAMI,QAAQ,IAE3BuI,SAAU,CACNC,cAAe5I,EAAMI,QAAQ,QAKtB,SAASyI,GAAT,GAAsD,IAAtBlI,EAAqB,EAArBA,KAAME,EAAe,EAAfA,YAC3CI,EAAUnB,KAEhB,EAAoCoB,mBAASkH,MAA7C,mBAAOD,EAAP,KAAmBW,EAAnB,KACIC,EAAc,YAAOZ,GAEnB5E,EAAa,CAACD,KAAM,IAqC1B,OACI,8BACI,eAACrB,EAAA,EAAD,CAAQwB,UAAWxC,EAAQhB,KAAMU,KAAMA,EAAMuB,QAASrB,EAAcuC,WAAW,EAAM4F,SAAU,KAAMC,sBAAoB,EAAzH,UACI,cAAC7G,EAAA,EAAD,8BACA,eAACE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,yDAGC4F,EAAWlK,KAAI,SAAC0B,EAAMuJ,GAAP,OACZ,eAACrD,EAAA,EAAD,CAAKpC,UAAWxC,EAAQwH,QAAxB,UAEI,eAACtD,EAAA,EAAD,CAAY1B,UAAWxC,EAAQ0H,SAA/B,kBAA+CO,EAAO,KAErDvJ,EAAK1B,KAAI,SAACmB,EAAQ+J,GAEf,IAAM7H,EAAOlC,EAAOkC,KACdE,EAAOpC,EAAOoC,KACdJ,EAAShC,EAAOgC,OAEtB,OACI,eAACyE,EAAA,EAAD,CAA6BpC,UAAWxC,EAAQf,UAAhD,UACI,cAACsC,EAAA,EAAD,CAAWiB,UAAWxC,EAAQqH,sBAC1B7F,QAAQ,WACRM,MAAO,cACPC,SAAU,SAAC8C,GAAD,OA3DnB,SAACoD,EAAMC,EAAMrD,GACxCiD,EAAeG,GAAMC,GAAM7H,KAAOwE,EAAM3C,OAAOL,MAC/CgG,EAAcC,GAyD2CK,CAAuBF,EAAMC,EAAMrD,IACxDhD,MAAOxB,EAEPiE,KAAK,QACLa,UAAU,QAPd,UAKY8C,EALZ,YAKoBC,EALpB,UAQA,cAAC3G,EAAA,EAAD,CAAWiB,UAAWxC,EAAQsH,sBAC1B9F,QAAQ,WACRM,MAAO,cAEPD,MAAOtB,EACPwB,SAAU,SAAC8C,GAAD,OAhEnB,SAACoD,EAAMC,EAAMrD,GACxCiD,EAAeG,GAAMC,GAAM3H,KAAOsE,EAAM3C,OAAOL,MAC/CgG,EAAcC,GA8D2CM,CAAuBH,EAAMC,EAAMrD,IACxDM,UAAU,OACVb,KAAK,SAPT,UAGY2D,EAHZ,YAGoBC,EAHpB,UAQA,cAAC3G,EAAA,EAAD,CAAWiB,UAAWxC,EAAQuH,wBAC1B/F,QAAQ,WACRM,MAAO,gBAEPD,MAAO1B,EACPkC,KAAQ,GACRC,WAAYA,EACZP,SAAU,SAAC8C,GAAD,OArEjB,SAACoD,EAAMC,EAAMrD,GAC1CiD,EAAeG,GAAMC,GAAM/H,OAAS0E,EAAM3C,OAAOL,MACjDgG,EAAcC,GAmE2CO,CAAyBJ,EAAMC,EAAMrD,IAC1DM,UAAU,SACVb,KAAK,SATT,UAGY2D,EAHZ,YAGoBC,EAHpB,YAWA,cAACtB,EAAA,EAAD,CAAY5D,QAAS,kBA1D9B,SAACiF,EAAMC,GAC9BJ,EAAeG,GAAMK,OAAOJ,EAAM,GAClCL,EAAcC,GAwD6CS,CAAmBN,EAAMC,IAApD,SACI,cAACrB,EAAA,EAAD,QA7BR,UAAaoB,EAAb,YAAqBC,OAmC7B,cAACnF,EAAA,EAAD,CAAQ3F,MAAM,UAAU4F,QAAS,kBAtEjC,SAACiF,GACrBH,EAAeG,GAAMrJ,KAAK,CAAE,KAAQ,GAAI,KAAQ,GAAI,MAAS,KAAM,OAAU,IAC7EiJ,EAAcC,GAoE6CnI,CAAgBsI,IAAvD,iCAOZ,eAACnF,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAQC,QAAS,WACbmE,KACAU,EAAcV,MACdvH,KACDxC,MAAM,UAJT,8BAOI,cAAC2F,EAAA,EAAD,CAAQC,QAAS,WACbpD,IACAiI,EAAcV,OACX/J,MAAM,UAHb,oBAMA,cAAC2F,EAAA,EAAD,CAAQ3F,MAAM,UAAU4F,QAhGlB,WAClB8E,EAAelJ,KAAK,IACpBiJ,EAAcC,IA8FF,sBAGA,cAAC/E,EAAA,EAAD,CAAQC,QApFL,WACfmE,GAAiCD,GACjCtH,KAkFyCxC,MAAM,UAAnC,0BClJpB,IAAMyB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJQ,MAAO,OACPwG,gBAAiBjH,EAAMoH,QAAQqC,WAAWC,MAC1CC,SAAU,WACVC,SAAU,QAGZC,YAAa,CACX5C,gBAAiB,WAEnB6C,GAAI,CACF7C,gBAAiB,UACjBJ,QAAS,OAKE,SAASkD,GAAT,GAAuD,IAAlCnJ,EAAiC,EAAjCA,gBAC5BK,GAD6D,EAAhBwF,cACnC3G,MAEhB,EAAgEoB,oBAAS,GAAzE,mBAAO8I,EAAP,KAAiCC,EAAjC,KAMA,EAA0B/I,mBAASkH,MAAnC,mBAAO5B,EAAP,KAAc0D,EAAd,KAaMC,EAAU,SAAC/K,GAEf,IADA,IAAIJ,EAAeG,IACVyH,EAAI,EAAGA,EAAI5H,EAAarB,OAAQiJ,IAErC,IADA,IAAIjH,EAAOX,EAAa4H,GACflJ,EAAI,EAAGA,EAAIiC,EAAKhC,OAAQD,IAC7B,GAAIiC,EAAKjC,GAAG4D,OAASlC,EAAOkC,KACxB,OAAO,EAInB,OAAO,GAIT,EAA0CQ,IAAMZ,UAAS,GAAzD,mBAAOkJ,EAAP,KAAsBC,EAAtB,KAWF,EAA4CnJ,mBAAS,IAArD,mBAAOoJ,EAAP,KAAuBC,EAAvB,KACA,EAAwCrJ,mBAAS,IAAjD,mBAAOsJ,EAAP,KAAqBC,EAArB,KACA,EAA8CvJ,mBAAS,GAAvD,mBAAOwJ,EAAP,KAAwBC,EAAxB,KAGM3L,EAAeG,IAEnB,OACE,eAAC8F,EAAA,EAAD,CAAMxC,QAAS,WAAf,UACE,cAACiF,EAAA,EAAD,CACEE,OACA,cAACC,EAAA,EAAD,CAAY5D,QArDqB,WACrCgG,GAA4B,IAoDxB,SACI,cAAC,KAAD,MAGJ9F,MAAO,eAET,cAACyG,GAAA,EAAD,CAAMnH,UAAWxC,EAAQhB,KAAM8H,UAAW,uBAA1C,SACGvB,EAAMvI,KAAI,SAAC0B,EAAMH,GAAP,OACT,oBAA2BiE,UAAWxC,EAAQ4I,YAA9C,SACE,qBAAIpG,UAAWxC,EAAQ6I,GAAvB,UACE,cAACe,GAAA,EAAD,0BAAyBrL,EAAM,KAC9BG,EAAK1B,KAAI,SAACmB,GAAD,OACR,cAAC0L,GAAA,EAAD,CAAUC,QAAM,EAAC9G,QAAS,SAAChB,GACzBsH,EAAkBnL,GAClBqL,EAAgBzL,EAAaQ,IAC7BmL,EAAmBnL,GAlCjC6K,GAAiB,IAoCFjG,SAAU+F,EAAQ/K,GAAS4L,OAAK,EALnC,SAME,cAACC,GAAA,EAAD,CAAc5D,QAAO,UAAKjI,EAAOkC,KAAZ,cAAsBlC,EAAOoC,KAA7B,aAAsCpC,EAAOgC,OAA7C,QANvB,eAKkD5B,EALlD,YAKyDJ,WAT/D,kBAAoBI,SAiBxB,cAACqJ,GAAD,CAAsBlI,KAAMqJ,EAA0BnJ,YAvElB,WACtCoJ,GAA4B,GAC5B,IAAIvK,EAAI0I,KACR8B,EAASxK,GACT0I,GAAiC1I,MAoE/B,cAACgB,EAAD,CAAiBI,YAAawJ,EAAehJ,KAAMP,YAAauJ,EAAe9I,KAAMR,cAAesJ,EAAelJ,OAAQzB,KAAM6K,EAAc5K,QAAS8K,EAAiB/J,KAAMyJ,EAAevJ,YA1CrK,WAC3BwJ,GAAiB,IAyCkNzJ,gBAAiBA,O,UCvGlPd,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF4G,QAAS7G,EAAMI,QAAQ,IAE3B+H,WAAY,CACRlB,gBAAiBiE,KAAK,KACtBC,OAAQ,QAEZC,eAAgB,CACZnE,gBAAiBiE,KAAK,MAE1BG,iBAAkB,CACdlL,aAAcH,EAAMI,QAAQ,IAEhCkL,SAAU,CACNC,aAAc,SACdC,WAAY,SACZC,cAAe,SACfC,UAAW,IACXC,SAAU,IACV1E,gBAAiBiE,KAAK,UAyFfU,GApFF,WAGT,MAA0B1K,mBAAS/B,KAAnC,mBAAOqH,EAAP,KAAc0D,EAAd,KACA/K,EAAqCqH,GAErC,IAAMvF,EAAUnB,GAAU0G,GAEpBiB,EAAe,SAAC7H,EAAS4H,EAAWpI,GACtC,IAAIyM,EAAQ,YAAOrF,GACnBqF,EAASvM,SAAQ,SAACC,EAAGC,GACjBqM,EAASrM,GAAOqM,EAASrM,GAAKC,QAAO,SAAAC,GAAC,OAAIA,IAAMN,QAEpD8K,EAAS2B,GACT1M,EAAiCC,IAG/BwB,EAAkB,SAACjB,EAAMC,EAASR,GAEpC,IAAIyM,EAAQ,YAAOrF,GACnBqF,EAASjM,GAASC,KAAKT,GACvB8K,EAAS2B,GACT1M,EAA8BQ,EAAMC,EAASR,IAG3CqH,EAAgB,WAClB,IAAIoF,EAAQ,YAAOrF,GACnBqF,EAAShM,KAAK,IACdqK,EAAS2B,GACT1M,EAAqC0M,IAInCjH,EAAmB,SAACjF,GACtB,IAAIkM,EAAWrF,EAAM/G,QAAO,SAAAF,GAAC,OAAIA,IAAMI,KACvCuK,EAAS2B,GACT1M,EAAqC0M,IAIzC,OACI,qBAAKpI,UAAWxC,EAAQhB,KAAxB,SACI,eAAC6L,EAAA,EAAD,CAAMC,WAAS,EAAC3L,QAAS,EAAzB,UAEI,eAAC0L,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UAEI,cAACpG,EAAA,EAAD,CAAKpC,UAAWxC,EAAQoK,iBAAxB,SACI,cAAC9E,EAAD,CAASC,MAAOA,EAAOC,cAAeA,MAEzCD,EAAMvI,KAAI,SAAC0B,EAAMC,GAAP,OAEP,cAACiG,EAAA,EAAD,UACI,eAACiG,EAAA,EAAD,CAAMC,WAAS,EAAC3L,QAAS,EAAGqD,UAAWxC,EAAQtB,KAA/C,UACI,cAACmM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACtH,EAAD,CAAahF,KAAMA,EAAMC,QAASA,EAASgB,gBAAiBA,EAAiBgE,iBAAkBA,MAGnG,cAACkH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACH,EAAA,EAAD,CAAMC,WAAS,EAACtI,UAAWxC,EAAQtB,KAAnC,SACI,cAACmM,EAAA,EAAD,CAAMC,WAAS,EAAC3L,QAAS,EAAGqD,UAAWxC,EAAQtB,KAA/C,SACKA,EAAK1B,KAAI,SAACmB,EAAQoI,GAAT,OACN,cAACsE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC3E,EAAD,CAAY3H,QAASA,EAAS4H,UAAWA,EAAWpI,OAAQA,EAAQqI,aAAcA,0BAWtH,cAACqE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SAEI,cAAClC,GAAD,CAAYnJ,gBAAiBA,EAAiB6F,cAAeA,Y,kECzG3E0F,GAAO,CACX,CAAEC,QAAS,SAAUC,KAAM,IAC3B,CAAED,QAAS,SAAUC,KAAM,GAC3B,CAAED,QAAS,MAAOC,KAAM,GACxB,CAAED,QAAS,QAASC,KAAM,GAC1B,CAAED,QAAS,SAAUC,KAAM,GAC3B,CAAED,QAAS,YAAaC,KAAM,GAC9B,CAAED,QAAS,QAASC,KAAM,GAC1B,CAAED,QAAS,SAAUC,KAAM,KAESvK,gBCHvBwK,OAXf,WACE,OACE,qBAAK7I,UAAU,MAAf,SACE,qBAAKA,UAAU,UAAf,SAEE,cAAC,GAAD,SCLR8I,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4b0cab8d.chunk.js","sourcesContent":["\r\nconst defaultScale = [\r\n    { \"grade\": \"A1\", \"score\": 4.0 },\r\n    { \"grade\": \"A2\", \"score\": 3.75 },\r\n    { \"grade\": \"A3\", \"score\": 3.5 },\r\n    { \"grade\": \"B1\", \"score\": 3.25 },\r\n    { \"grade\": \"B2\", \"score\": 3.0 },\r\n    { \"grade\": \"B3\", \"score\": 2.75 },\r\n    { \"grade\": \"C1\", \"score\": 2.5 },\r\n    { \"grade\": \"C2\", \"score\": 2.25 },\r\n    { \"grade\": \"C3\", \"score\": 2.0 },\r\n    { \"grade\": \"D\", \"score\": 1.75 },\r\n    { \"grade\": \"F1\", \"score\": 0 },\r\n    { \"grade\": \"F2\", \"score\": 0 },\r\n    { \"grade\": \"F3\", \"score\": 0 },\r\n];\r\n\r\nconst saveGradingScale = (scale) => {\r\n    localStorage.setItem(\"grading_scale\", JSON.stringify(scale));\r\n}\r\n\r\nconst getGradingScale = () => {\r\n    const scale = localStorage.getItem(\"grading_scale\");\r\n    if (scale === null || scale === \"\") {\r\n        saveGradingScale(defaultScale);\r\n        return defaultScale;\r\n    }\r\n    return JSON.parse(scale);\r\n}\r\n\r\nconst gradeToScore = (grade) => {\r\n    let scales = GradingScaleService.getGradingScale();\r\n    for (var i = 0; i < scales.length; i++) {\r\n        if (scales[i].grade === grade) {\r\n            return scales[i].score;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst getColor = (grade) => {\r\n    const lerpHex = (a, b, amount) => {\r\n        const ar = a >> 16;\r\n        const ag = (a >> 8) & 0xff;\r\n        const ab = a & 0xff;\r\n\r\n        const br = b >> 16;\r\n        const bg = (b >> 8) & 0xff;\r\n        const bb = b & 0xff;\r\n\r\n        const rr = ar + amount * (br - ar);\r\n        const rg = ag + amount * (bg - ag);\r\n        const rb = ab + amount * (bb - ab);\r\n\r\n        return (rr << 16) + (rg << 8) + (rb | 0);\r\n    }\r\n\r\n    const scale = getGradingScale();\r\n    const min = Math.min.apply(Math, scale.map(function (o) { return o.score; }));\r\n    const max = Math.max.apply(Math, scale.map(function (o) { return o.score; }));\r\n    // const sum = scale.reduce(function(prev, cur) {return prev + cur.score;}, 0);\r\n\r\n    const score = gradeToScore(grade);\r\n    const percentage = min + score / (max - min);\r\n\r\n    const color = lerpHex(parseInt(\"FF6F31\", 16), parseInt(\"57BB8A\", 16), percentage).toString(16);\r\n    \r\n    return `#${color}`;\r\n}\r\n\r\n\r\nexport const GradingScaleService = { saveGradingScale, getGradingScale, gradeToScore, getColor };","\r\n\r\nconst saveTakenCourses = (takenCourses) => {\r\n    localStorage.setItem(\"taken_courses\", JSON.stringify(takenCourses));\r\n}\r\n\r\nconst getTakenCourses = () => {\r\n    const taken_courses = localStorage.getItem(\"taken_courses\");\r\n    if (taken_courses === null || taken_courses === \"\") {\r\n        return [\r\n            [\r\n                { \"code\": \"FİZ137\", \"name\": \"Physics  I\", \"grade\": \"A1\", \"credit\": 5 },\r\n                { \"code\": \"İNG111\", \"name\": \"Language Skills I\", \"grade\": \"F2\", \"credit\": 3 },\r\n            ],\r\n            [\r\n                { \"code\": \"MAT124\", \"name\": \"Mathematics II\", \"grade\": \"B2\", \"credit\": 6 },\r\n                { \"code\": \"FİZ138\", \"name\": \"Physics II\", \"grade\": \"C1\", \"credit\": 5 },\r\n                { \"code\": \"FİZ117\", \"name\": \"General Physics Lab.\", \"grade\": \"D\", \"credit\": 2 },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    return JSON.parse(taken_courses);\r\n}\r\n\r\nconst removeCourse = (course) => {\r\n    const taken_courses = getTakenCourses();\r\n    let newTakenCourses = [...taken_courses]\r\n    newTakenCourses.forEach((t, idx) => {\r\n        newTakenCourses[idx] = newTakenCourses[idx].filter(c => c !== course)\r\n    })\r\n    saveTakenCourses(newTakenCourses);\r\n}\r\n\r\nconst addCourse = (term, termIdx, course) => {\r\n    const taken_courses = getTakenCourses();\r\n    let newTakenCourses = [...taken_courses]\r\n    newTakenCourses[termIdx].push(course);\r\n    saveTakenCourses(newTakenCourses);\r\n}\r\n\r\nconst addTerm = () => {\r\n    const taken_courses = getTakenCourses();\r\n    let newTakenCourses = [...taken_courses]\r\n    newTakenCourses.push([]);\r\n    saveTakenCourses(newTakenCourses);\r\n}\r\n\r\nexport const TakenCoursesService = { saveTakenCourses, getTakenCourses, removeCourse, addCourse, addTerm };","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { GradingScaleService } from '../service/GradingScaleService';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { TakenCoursesService } from '../service/TakenCoursesService';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n    },\r\n    dialogRow: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    dialogGradeField: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    dialogScoreField: {\r\n    },\r\n    formControl: {\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\n\r\nexport default function AddCourseDialog({ term, termIdx, open, handleAddCourse, handleClose, initialCode, initialName, initialCredit}) {\r\n    const classes = useStyles();\r\n    let scales = GradingScaleService.getGradingScale();\r\n\r\n    const [grade, setGrade] = useState(\"\");\r\n    const [credit, setCretit] = useState(initialCredit);\r\n    const [code, setCode] = useState(initialCode);\r\n    const [name, setName] = useState(initialName);\r\n    const [valid, setValid] = useState(true);\r\n    const inputProps = {step: 0.5};\r\n\r\n    const [termSize, setTermSize] = useState(TakenCoursesService.getTakenCourses().length);\r\n\r\n    React.useEffect(() => {\r\n        let s = TakenCoursesService.getTakenCourses().length;\r\n        setTermSize(s);\r\n    }, [open])\r\n\r\n   React.useEffect(() => {\r\n     \r\n    setCode(initialCode)\r\n    setName(initialName);\r\n    setCretit(initialCredit);\r\n   }, [initialCode, initialCredit, initialName])\r\n\r\n    const addCourse = (term, termIdx, course) => {\r\n        if (valid) {\r\n          handleAddCourse(term,termIdx,course )\r\n          handleClose()\r\n          setGrade(\"\")\r\n          setCode(\"\")\r\n          setName(\"\")\r\n          setCretit(\"\")\r\n        }else {\r\n          // alert \r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">New Course</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    To add a new course to term {termIdx + 1}, please fill the details here.\r\n                </DialogContentText>\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    autoFocus\r\n                    error ={!valid}\r\n                    required\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    value={code}\r\n                    label=\"Course Code\"\r\n                    onChange={(e) => {\r\n                    let flag = true;\r\n                    term.forEach((t, idx) => {\r\n                        if (t.code === e.target.value) {\r\n                        flag = false; \r\n                        } \r\n                    })\r\n                    setValid(flag);\r\n                    setCode(e.target.value)\r\n                    }}\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    autoFocus\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    required\r\n                    id=\"name\"\r\n                    value={name}\r\n                    label=\"Course Name\"\r\n                    onChange={(e) => {setName(e.target.value)}}\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    autoFocus\r\n                    required\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Course Credit\"\r\n                    value={credit}\r\n                    type=\"number\"\r\n                    step = {0.1}\r\n                    onChange={(e) => {setCretit(e.target.value)}}\r\n                    inputProps={inputProps}\r\n                    fullWidth\r\n                />\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">Course Grade</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"demo-simple-select-helper\"\r\n                        value={grade}\r\n                        label = \"Course Grade\"\r\n                        onChange={(e) => {setGrade(e.target.value)}}>\r\n\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n\r\n                        {scales.map((row) => (\r\n                        <MenuItem value={row.grade}>{row.grade}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n\r\n            <Tooltip title={termSize <= termIdx ? \"You have only \" + termSize +\" term. Create \" + (termIdx - termSize + 1) + \" more term!\" : null}>\r\n                <span>\r\n                <Button disabled={termSize <= termIdx}\r\n                onClick={\r\n                    () => {\r\n                    addCourse(term, termIdx, {\r\n                        \"code\": code, \r\n                        \"name\": name, \r\n                        \"grade\": grade, \r\n                        \"credit\": credit\r\n                    })\r\n                    }} color=\"primary\">\r\n                    Add\r\n                </Button>\r\n                </span>\r\n            </Tooltip>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GradingScaleService } from '../service/GradingScaleService';\r\nimport AddCourseDialog from './AddCourseDialog';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n},\r\n});\r\n\r\nexport default function TermSummary({term, termIdx, handleAddCourse, handleRemoveTerm}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  let totalCredit = 0;\r\n  let termGpa = 0;\r\n  for (var i = 0; i < term.length; i++) {\r\n    let currCredit = parseInt(term[i].credit)\r\n    totalCredit += currCredit\r\n    termGpa += currCredit * GradingScaleService.gradeToScore(term[i].grade)\r\n  }\r\n\r\n  return (\r\n    <Card  variant={\"outlined\"} className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" >\r\n          Term - {termIdx + 1} GPA\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {(termGpa / totalCredit).toPrecision(3)}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          {\"Total Credit: \" +totalCredit}\r\n        </Typography>\r\n      </CardContent>\r\n      \r\n      <CardActions>\r\n                <Button variant=\"contained\"  size=\"small\" color=\"primary\" onClick={handleClickOpen}>Add Course</Button>\r\n                <Button variant=\"outlined\"  size=\"small\" onClick={() => handleRemoveTerm(term)}>Remove Term</Button>\r\n      </CardActions>\r\n\r\n      <AddCourseDialog initialCode={\"\"} initialName={\"\"} initialCredit={0} term={term} termIdx={termIdx} open={open} handleClose={handleClose} handleAddCourse={handleAddCourse}/>\r\n    \r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { GradingScaleService } from '../service/GradingScaleService';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n    },\r\n    dialogRow: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    dialogGradeField: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    dialogScoreField: {\r\n    },\r\n}));\r\n\r\n\r\nexport default function GradingScaleDialog({ open, handleClose }) {\r\n    const classes = useStyles();\r\n\r\n    const [scale, setScale] = useState(GradingScaleService.getGradingScale());\r\n\r\n    const handleGradeNameChange = (oldKey, event) => {\r\n        const newKey = event.target.value;\r\n        for (const i in scale) {\r\n            if (scale[i].grade === oldKey) {\r\n                scale[i].grade = newKey;\r\n                console.log(\"Grade changed:\", oldKey, newKey);\r\n                break;\r\n            }\r\n        };\r\n        setScale(JSON.parse(JSON.stringify(scale)));\r\n    }\r\n\r\n    const handleScoreChange = (key, event) => {\r\n        for (const i in scale) {\r\n            if (scale[i].grade === key) {\r\n                scale[i].score = event.target.value;\r\n                break;\r\n            }\r\n        }\r\n        setScale(JSON.parse(JSON.stringify(scale)));\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle>Set Grading Scale</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Configure your grading scale.\r\n                </DialogContentText>\r\n                {scale.map((entry, idx) => {\r\n                    const k = entry.grade;\r\n                    const v = entry.score;\r\n                    return (\r\n                        <Box key={idx} className={classes.dialogRow}>\r\n                            <TextField className={classes.dialogGradeField}\r\n                                variant=\"outlined\"\r\n                                label={\"Grade\"}\r\n                                onChange={(event) => handleGradeNameChange(k, event)}\r\n                                value={k}\r\n                                key={`${idx}g`}\r\n                                size=\"small\"\r\n                                inputMode=\"text\" />\r\n                            <TextField className={classes.dialogScoreField}\r\n                                variant=\"outlined\"\r\n                                label={\"Score\"}\r\n                                key={`${idx}s`}\r\n                                value={v}\r\n                                onChange={(event) => handleScoreChange(k, event)}\r\n                                inputMode=\"number\"\r\n                                size=\"small\" />\r\n\r\n                        </Box>\r\n                    );\r\n                })}\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    setScale(GradingScaleService.getGradingScale());\r\n                    handleClose();\r\n                }} color=\"primary\">\r\n                    CANCEL\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => {\r\n                    setScale([...scale, { \"grade\": \"\", \"score\": 0.0 }]);\r\n                }}>\r\n                    ADD GRADE\r\n                </Button>\r\n                <Button onClick={() => {\r\n                    GradingScaleService.saveGradingScale(scale);\r\n                    handleClose();\r\n                }} color=\"primary\">\r\n                    SAVE\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport  GradingScaleDialog  from \"./GradingScaleDialog\";\r\nimport { GradingScaleService } from '../service/GradingScaleService';\r\nimport { PieChart } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n  root: {\r\n  }\r\n}));\r\n\r\nexport default function Summary({ terms, handleAddTerm }) {\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  const [gradingScaleDialogOpen, setGradingScaleDialogOpen] = useState(false);\r\n\r\n  let totalCredit = 0;\r\n  let termGpa = 0;\r\n  for (var j = 0; j < terms.length; j++) {\r\n    var term = terms[j];\r\n    for (var i = 0; i < term.length; i++) {\r\n      let currCredit = parseInt(term[i].credit)\r\n      totalCredit += currCredit\r\n      termGpa += currCredit * GradingScaleService.gradeToScore(term[i].grade);\r\n    }\r\n  }\r\n\r\n\r\n  const handleOpenGradingScaleDialog = () => {\r\n    setGradingScaleDialogOpen(true);\r\n  }\r\n\r\n  const handleCloseGradingScaleDialog = () => {\r\n    setGradingScaleDialogOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      \r\n      <Card variant={\"outlined\"} className={classes.root}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\" >\r\n            Cumulative GPA\r\n        </Typography>\r\n          <Typography variant=\"h2\">\r\n            {(termGpa / totalCredit).toPrecision(3)}\r\n          </Typography>\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            {\"Total Credit: \" + totalCredit}\r\n          </Typography>\r\n          \r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleAddTerm}>ADD TERM</Button>\r\n          <Button variant=\"outlined\" size=\"small\" onClick={handleOpenGradingScaleDialog}>SET GRADING SCALE</Button>\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <GradingScaleDialog open={gradingScaleDialogOpen} handleClose={handleCloseGradingScaleDialog} />\r\n    </Box>\r\n   \r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { DeleteOutlined } from \"@material-ui/icons\";\r\nimport { Avatar, CardHeader, IconButton } from '@material-ui/core';\r\nimport { Box } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GradingScaleService } from '../service/GradingScaleService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 1.2,\r\n    },\r\n    card: {\r\n        border: (course) => {\r\n            return `1px solid ${GradingScaleService.getColor(course.grade)}`;\r\n        }\r\n    },\r\n    avatar: {\r\n        backgroundColor: (course) => {\r\n            return GradingScaleService.getColor(course.grade);\r\n        }\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    creditTypography: {\r\n        marginLeft: theme.spacing(1),\r\n        color: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\n\r\nexport default function CourseCard({ termIdx, courseIdx, course, handleDelete }) {\r\n    const classes = useStyles(course);\r\n    return (\r\n        <div>\r\n            <Card variant={\"outlined\"} className={classes.card}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar className={classes.avatar}>\r\n                            {course.grade}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <IconButton onClick={() => handleDelete(termIdx, courseIdx, course)}>\r\n                            <DeleteOutlined />\r\n                        </IconButton>\r\n                    }\r\n                    title={course.code}\r\n                    subheader={\r\n                        <Box flex=\"column\">\r\n                            <Typography variant=\"caption\">{course.name}</Typography>\r\n                            <Typography className={classes.creditTypography} variant=\"caption\">{course.credit}</Typography>\r\n                        </Box>\r\n                    }\r\n                />\r\n            </Card>\r\n        </div>\r\n    );\r\n}","\r\nconst defaultCurriculum = [\r\n    [\r\n        { \"code\": \"BBM101\", \"name\": \"Introduction to Programming I\", \"grade\": \"B3\", \"credit\": 6 },\r\n        { \"code\": \"BBM103\", \"name\": \"Introduction to Programming Laboratory I\", \"grade\": \"C1\", \"credit\": 4 },\r\n        { \"code\": \"MAT123\", \"name\": \"Mathematics I\", \"grade\": \"C1\", \"credit\": 6 },\r\n        { \"code\": \"FİZ137\", \"name\": \"Physics  I\", \"grade\": \"C1\", \"credit\": 5 },\r\n        { \"code\": \"BBM105\", \"name\": \"Introduction to Computer Engineering\", \"grade\": \"C1\", \"credit\": 2 },\r\n        { \"code\": \"İNG111\", \"name\": \"Language Skills I\", \"grade\": \"C1\", \"credit\": 3 },\r\n        { \"code\": \"TKD103\", \"name\": \"Turkish I\", \"grade\": \"C1\", \"credit\": 2 },\r\n        { \"code\": \"BEB650\", \"name\": \"Basic Information and Communication Technologies\", \"grade\": \"C1\", \"credit\": 2 },\r\n    ],\r\n    [\r\n        { \"code\": \"BBM102\", \"name\": \"Introduction to Programming II\", \"grade\": \"B3\", \"credit\": 8 },\r\n        { \"code\": \"BBM104\", \"name\": \"Introduction to Programming Laboratory II\", \"grade\": \"C1\", \"credit\": 4 },\r\n        { \"code\": \"MAT124\", \"name\": \"Mathematics II\", \"grade\": \"C1\", \"credit\": 6 },\r\n        { \"code\": \"FİZ138\", \"name\": \"Physics II\", \"grade\": \"C1\", \"credit\": 5 },\r\n        { \"code\": \"FİZ117\", \"name\": \"General Physics Lab.\", \"grade\": \"C1\", \"credit\": 2 },\r\n        { \"code\": \"İNG112\", \"name\": \"Language Skills II\", \"grade\": \"C1\", \"credit\": 3 },\r\n        { \"code\": \"TKD104\", \"name\": \"Turkish II\", \"grade\": \"C1\", \"credit\": 2 },\r\n    ],\r\n    [\r\n        { \"code\": \"BBM201\", \"name\": \"Data Structures\", \"grade\": \"B3\", \"credit\": 5 },\r\n        { \"code\": \"BBM203\", \"name\": \"Software Laboratory I\", \"grade\": \"C1\", \"credit\": 2 },\r\n        { \"code\": \"BBM205\", \"name\": \"Discrete Structures\", \"grade\": \"B3\", \"credit\": 5 },\r\n        { \"code\": \"BBM231\", \"name\": \"Logic Design\", \"grade\": \"B3\", \"credit\": 5 },\r\n        { \"code\": \"BBM233\", \"name\": \"Logic Design Lab\", \"grade\": \"B3\", \"credit\": 2 },\r\n        { \"code\": \"İST299\", \"name\": \"Probability\", \"grade\": \"B3\", \"credit\": 5 },\r\n        { \"code\": \"AİT203\", \"name\": \"Atatürk's Princ. And The History of The Revol. I\", \"grade\": \"B3\", \"credit\": 2 },\r\n        { \"code\": \"MÜH103\", \"name\": \"Occupational Health and Safety I\", \"grade\": \"B3\", \"credit\": 1 },\r\n        { \"code\": \"NTECH\", \"name\": \"Nontechnical Elective\", \"grade\": \"B3\", \"credit\": 3 },\r\n    ],\r\n    [\r\n        { \"code\": \"BBM202\", \"name\": \"Algorithms\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"BBM204\", \"name\": \"Software Laboratory II\", \"grade\": \"C1\", \"credit\": 2 },\r\n        { \"code\": \"BBM234\", \"name\": \"Computer Organization\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"MAT254\", \"name\": \"Fundamentals of Linear Algebra\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"ELE296\", \"name\": \"Introduction to Electronic Circ. and Syst.\", \"grade\": \"B3\", \"credit\": 5 },\r\n        { \"code\": \"İST292\", \"name\": \"Statistics\", \"grade\": \"B3\", \"credit\": 5 },\r\n        { \"code\": \"AİT204\", \"name\": \"Atatürk's Princ. And The History of The Revol. II\", \"grade\": \"B3\", \"credit\": 2 },\r\n        { \"code\": \"MÜH104\", \"name\": \"Occupational Health and Safety II\", \"grade\": \"B3\", \"credit\": 1 },\r\n        { \"code\": \"NTECH\", \"name\": \"Nontechnical Elective\", \"grade\": \"B3\", \"credit\": 3 },\r\n    ],\r\n    [\r\n        { \"code\": \"BBM301\", \"name\": \"Programming Languages\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"BBM325\", \"name\": \"Internship I\", \"grade\": \"C1\", \"credit\": 5 },\r\n        { \"code\": \"BBM341\", \"name\": \"Systems Programming\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"BBM371\", \"name\": \"Data Management\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"BBM\", \"name\": \"Technical Elective\", \"grade\": \"B3\", \"credit\": 6 },\r\n        { \"code\": \"BBM\", \"name\": \"Technical Elective Lab.\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"NTECH\", \"name\": \"Nontechnical Elective\", \"grade\": \"B3\", \"credit\": 3 },\r\n    ],\r\n    [\r\n        { \"code\": \"BBM342\", \"name\": \"Operating Systems\", \"grade\": \"B3\", \"credit\": 5 },\r\n        { \"code\": \"BBM382\", \"name\": \"Software Engineering\", \"grade\": \"C1\", \"credit\": 5 },\r\n        { \"code\": \"BBM384\", \"name\": \"Software Engineering Lab.\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"BBM\", \"name\": \"Technical Elective\", \"grade\": \"B3\", \"credit\": 6 },\r\n        { \"code\": \"BBM\", \"name\": \"Technical Elective\", \"grade\": \"B3\", \"credit\": 6 },\r\n        { \"code\": \"NTECH\", \"name\": \"Nontechnical Elective\", \"grade\": \"B3\", \"credit\": 4},\r\n    ],\r\n    [\r\n        { \"code\": \"BBM425\", \"name\": \"Internship II\", \"grade\": \"B3\", \"credit\": 5 },\r\n        { \"code\": \"BBM427\", \"name\": \"Technology Seminars I\", \"grade\": \"C1\", \"credit\": 1 },\r\n        { \"code\": \"BBM479\", \"name\": \"Design Project I\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"BBM\", \"name\": \"Technical Elective\", \"grade\": \"B3\", \"credit\": 6 },\r\n        { \"code\": \"BBM\", \"name\": \"Technical Elective\", \"grade\": \"B3\", \"credit\": 6 },\r\n        { \"code\": \"BBM\", \"name\": \"Technical Elective Lab.\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"NTECH\", \"name\": \"Nontechnical Elective\", \"grade\": \"B3\", \"credit\": 4},\r\n    ],\r\n    [\r\n        { \"code\": \"BBM428\", \"name\": \"Technology Seminars II\", \"grade\": \"B3\", \"credit\": 1 },\r\n        { \"code\": \"BBM480\", \"name\": \"Design Project II\", \"grade\": \"C1\", \"credit\": 6 },\r\n        { \"code\": \"BBM\", \"name\": \"Technical Elective\", \"grade\": \"B3\", \"credit\": 6 },\r\n        { \"code\": \"BBM\", \"name\": \"Technical Elective\", \"grade\": \"B3\", \"credit\": 6 },\r\n        { \"code\": \"BBM\", \"name\": \"Technical Elective Lab.\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"BBM\", \"name\": \"Technical Elective Lab.\", \"grade\": \"B3\", \"credit\": 4 },\r\n        { \"code\": \"NTECH\", \"name\": \"Nontechnical Elective\", \"grade\": \"B3\", \"credit\": 3},\r\n    ],\r\n]\r\n\r\nconst saveCurriculum = (curriculum) => {\r\n    localStorage.setItem(\"curriculum\", JSON.stringify(curriculum));\r\n}\r\n\r\nconst resetCurriculum = () => {\r\n    localStorage.removeItem(\"curriculum\");\r\n    saveCurriculum(defaultCurriculum);\r\n}\r\n\r\nconst getCurriculum = () => {\r\n    const curriculum = localStorage.getItem(\"curriculum\");\r\n    if (curriculum === null || curriculum === \"\") {\r\n        saveCurriculum(defaultCurriculum);\r\n        return defaultCurriculum;\r\n    }\r\n    return JSON.parse(curriculum);\r\n}\r\n\r\n\r\nexport const CurriculumService = { saveCurriculum, getCurriculum, resetCurriculum };","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, IconButton, Typography } from '@material-ui/core';\r\nimport { CurriculumService } from '../service/CurriculumService';\r\nimport { DeleteOutlined } from '@material-ui/icons';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: { \r\n    },\r\n    dialogRow: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    dialogCourseCodeField: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    dialogCourseNameField: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    dialogCourseCreditField: {\r\n    },\r\n    termBox: {\r\n        border: \"1px solid grey\",\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n    },\r\n    termText: {\r\n        paddingBottom: theme.spacing(2),\r\n    }\r\n}));\r\n\r\n\r\nexport default function EditCurriculumDialog({ open, handleClose }) {\r\n    const classes = useStyles();\r\n\r\n    const [curriculum, setCurriculum] = useState(CurriculumService.getCurriculum());\r\n    let copyCurriculum = [...curriculum];\r\n\r\n    const inputProps = {step: 0.5};\r\n\r\n    const handleCourseCodeChange = (tidx, cidx, event) => {\r\n        copyCurriculum[tidx][cidx].code = event.target.value;\r\n        setCurriculum(copyCurriculum);\r\n    }\r\n\r\n    const handleCourseNameChange = (tidx, cidx, event) => {\r\n        copyCurriculum[tidx][cidx].name = event.target.value;\r\n        setCurriculum(copyCurriculum);\r\n    }\r\n\r\n    const handleCourseCreditChange = (tidx, cidx, event) => {\r\n        copyCurriculum[tidx][cidx].credit = event.target.value;\r\n        setCurriculum(copyCurriculum);\r\n    }\r\n\r\n    const handleAddTerm = () => {\r\n        copyCurriculum.push([]);\r\n        setCurriculum(copyCurriculum);\r\n    }\r\n\r\n    const handleAddCourse = (tidx) => {\r\n        copyCurriculum[tidx].push({ \"code\": \"\", \"name\": \"\", \"grade\": \"C1\", \"credit\": 0 },)\r\n        setCurriculum(copyCurriculum);\r\n    }\r\n\r\n    const handleDeleteCourse = (tidx, cidx) => {\r\n        copyCurriculum[tidx].splice(cidx, 1);\r\n        setCurriculum(copyCurriculum);\r\n    }\r\n\r\n    const handleSave = () => {\r\n        CurriculumService.saveCurriculum(curriculum);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog className={classes.root} open={open} onClose={handleClose}  fullWidth={true} maxWidth={\"md\"} disableBackdropClick>\r\n                <DialogTitle>Edit Curriculum</DialogTitle>\r\n                <DialogContent >\r\n                    <DialogContentText>\r\n                        Add or remove courses for your curriculum.\r\n                </DialogContentText>\r\n                    {curriculum.map((term, tidx) => (\r\n                        <Box className={classes.termBox}>\r\n\r\n                            <Typography className={classes.termText}>Term {tidx + 1}</Typography>\r\n\r\n                            {term.map((course, cidx) => {\r\n\r\n                                const code = course.code;\r\n                                const name = course.name;\r\n                                const credit = course.credit;\r\n\r\n                                return (\r\n                                    <Box key={`${tidx}_${cidx}`} className={classes.dialogRow}>\r\n                                        <TextField className={classes.dialogCourseCodeField}\r\n                                            variant=\"outlined\"\r\n                                            label={\"Course code\"}\r\n                                            onChange={(event) => handleCourseCodeChange(tidx, cidx, event)}\r\n                                            value={code}\r\n                                            key={`${tidx}_${cidx}_code`}\r\n                                            size=\"small\"\r\n                                            inputMode=\"text\" />\r\n                                        <TextField className={classes.dialogCourseNameField}\r\n                                            variant=\"outlined\"\r\n                                            label={\"Course name\"}\r\n                                            key={`${tidx}_${cidx}_name`}\r\n                                            value={name}\r\n                                            onChange={(event) => handleCourseNameChange(tidx, cidx, event)}\r\n                                            inputMode=\"text\"\r\n                                            size=\"small\" />\r\n                                        <TextField className={classes.dialogCourseCreditField}\r\n                                            variant=\"outlined\"\r\n                                            label={\"Course credit\"}\r\n                                            key={`${tidx}_${cidx}_credit`}\r\n                                            value={credit}\r\n                                            step = {0.1}\r\n                                            inputProps={inputProps}\r\n                                            onChange={(event) => handleCourseCreditChange(tidx, cidx, event)}\r\n                                            inputMode=\"number\"\r\n                                            size=\"small\" />\r\n                                        \r\n                                        <IconButton onClick={() => handleDeleteCourse(tidx, cidx)}>\r\n                                            <DeleteOutlined />\r\n                                        </IconButton>\r\n\r\n                                    </Box>\r\n                                );\r\n                            })}\r\n                            <Button color=\"primary\" onClick={() => handleAddCourse(tidx)}>\r\n                                ADD COURSE\r\n                        </Button>\r\n                        </Box>\r\n                    ))}\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                <Button onClick={() => {\r\n                    CurriculumService.resetCurriculum();\r\n                    setCurriculum(CurriculumService.getCurriculum());\r\n                    handleClose();\r\n                }} color=\"primary\">\r\n                        RESET TO DEFAULT\r\n                    </Button>\r\n                    <Button onClick={() => {\r\n                        handleClose();\r\n                        setCurriculum(CurriculumService.getCurriculum());\r\n                        }} color=\"primary\">\r\n                        CANCEL\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={handleAddTerm}>\r\n                        ADD TERM\r\n                </Button>\r\n                    <Button onClick={handleSave} color=\"primary\">\r\n                        SAVE\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Card from '@material-ui/core/Card';\r\nimport { CardHeader, IconButton } from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { CurriculumService } from '../service/CurriculumService';\r\nimport EditCurriculumDialog from './EditCurriculumDialog';\r\nimport { TakenCoursesService } from '../service/TakenCoursesService';\r\nimport AddCourseDialog from './AddCourseDialog';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: 'relative',\r\n    overflow: 'auto',\r\n    \r\n  },\r\n  listSection: {\r\n    backgroundColor: 'inherit',\r\n  },\r\n  ul: {\r\n    backgroundColor: 'inherit',\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\n\r\nexport default function Curriculum({handleAddCourse, handleAddTerm}) {\r\n  const classes = useStyles();\r\n\r\n  const [editCurriculumDialogOpen, setEditCurriculumDialogOpen] = useState(false);\r\n\r\n  const handleOpenEditCurriculumDialog = () => {\r\n    setEditCurriculumDialogOpen(true);\r\n  }\r\n\r\n  const [terms, setTerms] = useState(CurriculumService.getCurriculum());\r\n\r\n\r\n  const handleCloseEditCurriculumDialog = () => {\r\n    setEditCurriculumDialogOpen(false);\r\n    let c = CurriculumService.getCurriculum();\r\n    setTerms(c);\r\n    CurriculumService.saveCurriculum(c);\r\n    // update terms\r\n  }\r\n\r\n  \r\n  \r\n  const isTaken = (course) => {\r\n    let takenCourses = TakenCoursesService.getTakenCourses();\r\n    for (var j = 0; j < takenCourses.length; j++) {\r\n        var term = takenCourses[j];\r\n        for (var i = 0; i < term.length; i++) {\r\n            if (term[i].code === course.code){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  \r\n  const [openAddCourse, setOpenAddCourse] = React.useState(false);\r\n\r\n  const handleAddCourseClickOpen = () => {\r\n    setOpenAddCourse(true);\r\n  };\r\n\r\n  const handleAddCourseClose = () => {\r\n    setOpenAddCourse(false);\r\n  };\r\n\r\n\r\nconst [selectedCourse, setSelectedCourse] = useState([]);\r\nconst [selectedTerm, setSelectedTerm] = useState([]);\r\nconst [selectedTermIdx, setSelectedTermIdx] = useState(0);\r\n\r\n\r\nconst takenCourses = TakenCoursesService.getTakenCourses()\r\n\r\n  return (\r\n    <Card variant={\"outlined\"} >\r\n      <CardHeader  \r\n        action ={\r\n        <IconButton onClick={handleOpenEditCurriculumDialog}>\r\n            <EditOutlinedIcon/>\r\n        </IconButton>\r\n        }\r\n        title={\"Curriculum\"}\r\n      />\r\n      <List className={classes.root} subheader={<li />}>\r\n        {terms.map((term, idx) => (\r\n          <li key={`section-${idx}`} className={classes.listSection}>\r\n            <ul className={classes.ul}>\r\n              <ListSubheader>{`Term  ${idx + 1}`}</ListSubheader>\r\n              {term.map((course) => (\r\n                <ListItem button onClick={(e) => {\r\n                  setSelectedCourse(course);\r\n                  setSelectedTerm(takenCourses[idx]);\r\n                  setSelectedTermIdx(idx);\r\n                  handleAddCourseClickOpen(); \r\n                }} disabled={isTaken(course)} dense  key={`item-${idx}-${course}`}>\r\n                  <ListItemText primary={`${course.code} - ${course.name} (${course.credit})`} />\r\n                </ListItem>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </List>\r\n      <EditCurriculumDialog open={editCurriculumDialogOpen} handleClose={handleCloseEditCurriculumDialog} />\r\n      <AddCourseDialog initialCode={selectedCourse.code} initialName={selectedCourse.name} initialCredit={selectedCourse.credit} term={selectedTerm} termIdx={selectedTermIdx} open={openAddCourse} handleClose={handleAddCourseClose} handleAddCourse={handleAddCourse}/>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TermSummary from '../src/component/TermSummary';\r\nimport Summary from '../src/component/Summary';\r\nimport CourseCard from \"../src/component/CourseCard\"\r\nimport { grey } from '@material-ui/core/colors';\r\nimport { Box} from '@material-ui/core';\r\nimport Curriculum from \"../src/component/Curriculum\";\r\nimport { TakenCoursesService } from \"../src/service/TakenCoursesService\";\r\nimport { PieChart } from '@material-ui/icons';\r\nimport '@devexpress/dx-react-chart-bootstrap4/dist/dx-react-chart-bootstrap4.css';\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    curriculum: {\r\n        backgroundColor: grey[300],\r\n        height: \"100%\"\r\n    },\r\n    curriculumGrid: {\r\n        backgroundColor: grey[300],\r\n    },\r\n    summaryContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    pieChart: {\r\n        alignContent: \"center\",\r\n        alignItems: \"center\",\r\n        verticalAlign: \"center\",\r\n        minHeight: 400,\r\n        minWidth: 400,\r\n        backgroundColor: grey[500],\r\n    }\r\n}));\r\n\r\n\r\nconst Home = () => {\r\n\r\n    \r\n    const [terms, setTerms] = useState(TakenCoursesService.getTakenCourses())\r\n    TakenCoursesService.saveTakenCourses(terms);\r\n\r\n    const classes = useStyles(terms);\r\n\r\n    const handleDelete = (termIdx, courseIdx, course) => {\r\n        let newTerms = [...terms]\r\n        newTerms.forEach((t, idx) => {\r\n            newTerms[idx] = newTerms[idx].filter(c => c !== course)\r\n        })\r\n        setTerms(newTerms)\r\n        TakenCoursesService.removeCourse(course);\r\n    }\r\n\r\n    const handleAddCourse = (term, termIdx, course) => {\r\n\r\n        let newTerms = [...terms]\r\n        newTerms[termIdx].push(course);\r\n        setTerms(newTerms);\r\n        TakenCoursesService.addCourse(term, termIdx, course);\r\n    }\r\n\r\n    const handleAddTerm = () => {\r\n        let newTerms = [...terms]\r\n        newTerms.push([]);\r\n        setTerms(newTerms);\r\n        TakenCoursesService.saveTakenCourses(newTerms);\r\n    }\r\n\r\n\r\n    const handleRemoveTerm = (term) => {\r\n        let newTerms = terms.filter(t => t !== term);\r\n        setTerms(newTerms);\r\n        TakenCoursesService.saveTakenCourses(newTerms);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2}>\r\n                \r\n                <Grid item xs={9}>\r\n                    \r\n                    <Box className={classes.summaryContainer}>\r\n                        <Summary terms={terms} handleAddTerm={handleAddTerm} />\r\n                    </Box>\r\n                    {terms.map((term, termIdx) => (\r\n\r\n                        <Box>\r\n                            <Grid container spacing={2} className={classes.term}>\r\n                                <Grid item xs={3}>\r\n                                    <TermSummary term={term} termIdx={termIdx} handleAddCourse={handleAddCourse} handleRemoveTerm={handleRemoveTerm} />\r\n\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Grid container className={classes.term}>\r\n                                        <Grid container spacing={1} className={classes.term}>\r\n                                            {term.map((course, courseIdx) => (\r\n                                                <Grid item xs={6} md={3}>\r\n                                                    <CourseCard termIdx={termIdx} courseIdx={courseIdx} course={course} handleDelete={handleDelete} />\r\n                                                </Grid>\r\n                                            ))}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    ))}\r\n                </Grid>\r\n                \r\n                <Grid item xs={3} >\r\n\r\n                    <Curriculum handleAddCourse={handleAddCourse} handleAddTerm={handleAddTerm} />\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  PieSeries,\r\n  Title,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\n\r\nconst data = [\r\n  { country: 'Russia', area: 12 },\r\n  { country: 'Canada', area: 7 },\r\n  { country: 'USA', area: 7 },\r\n  { country: 'China', area: 7 },\r\n  { country: 'Brazil', area: 6 },\r\n  { country: 'Australia', area: 5 },\r\n  { country: 'India', area: 2 },\r\n  { country: 'Others', area: 55 },\r\n];\r\nexport default class PieChart extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { data: chartData } = this.state;\r\n\r\n    return (\r\n      <Paper>\r\n        <Chart\r\n          data={chartData}\r\n        >\r\n          <PieSeries\r\n            valueField=\"area\"\r\n            argumentField=\"country\"\r\n          />\r\n          <Title\r\n            text=\"Area of Countries\"\r\n          />\r\n          <Animation />\r\n        </Chart>\r\n      </Paper>\r\n    );\r\n\r\n\r\n    \r\n  }\r\n\r\n  \r\n}\r\n\r\n","import './App.css';\nimport Home from './Home';\nimport '@devexpress/dx-react-chart-bootstrap4/dist/dx-react-chart-bootstrap4.css';\nimport PieChart from './component/PieChart';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n      \n        <Home/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}